КА широко применяются в различных областях науки (химия, экология, социология), в первую очередь в физике.
Преимущества клеточных: пытаются избежать проблемы классических с точностью.

3-4. рассказать про систему моделирования, цель - подсистема визуализации.
Качественная картина вместо микроуровня.
Организует исполнение моделирующих программ на кластере.


5. Функциональные требования (каждый пункт: определение, описание функционала)
Первым этапом было формирование списка требований к системе. 
* В первую очередь, это адекватность проблемной области: система создаётся для исследования клеточно-автоматных моделей и должна быть удобна(?) для изучения и отладки модели:
- это поддержка различных режимов отображения (под режимом отображения понимается то, как визуализируются данные на экране): напр., для исследования поведения будут удобен режим отображения осреднённый плотностей, профиль волны, направление потоков, а для формирования целостной картины удобен 3D.
- для исследования удобным будет не только счёт фиксированного кол-ва итераций с последующем просмотром результата, но и пошаговое исполнение.

* Работа с проектами и моделями
- Под моделью в системе понимается непосредственно сама модель с точки зрения (?) (т.е. все свойства модели: правила, по которым осуществляются переходы, масса частиц и т.п.) и объект данных, над которым производится счёт. В процессе изучения модели может оказаться востребованным исследования одной, но немного модифицированной модели, которые было бы удобно объединить в проект с возможностью сохранения и загрузки.

* Поддержка больших объёмов данных (превышающих объём памяти компьютера) - удобно для исследования части огромного объекта данных.



6. Нефункциональные требования.
Так же от архитектуры системы требуется свойство открытости:
* Это раширяемость: система должна быть готова к изменениям, свзяанным с включением поддержки новых режимов отображения, ранее не предусмотренных системой, т.к. требуется создание универсального инструмента, способного визуализировать различные модели КА. Так же, возможно, потребуется реализация альтернативных способов коммуникации с вычислителем или поддержка новых графических библиотек (напр., нас не устроит текующая поддержка OpenGL и мы заходти Direct3D).

* Интероперабельность: способность компонентов системы взаимодействовать между собой: взаимодействие с системой моделирования, экспорт во внешние форматы.

* Переносимость: 
реализация модулей программы не должна быть привязана к какой-либо платформе. В системе будет допускаться привязкам отдельных реализаций некоторых компонентов к определённым платформам, но в целом система должна быть платформонезависимой.

* Дружественность интерфейса:
- Интерфейса пользователя: графический интерфейс должен быть простым и интуитивно понятным, при этом не в ущерб функциональности.
- Программный интерфейс: т.к. к системе предъявляется требование масштабирования, то было бы желательным сделать максимально простым (без ущерба функциональности) возможность добавления новых компонентов: требовать реализацию только минимального набора необходимых методов.

Имитационное моделирование, а значит и необходимость в средствах визуализации, существует уже достаточно давно, поэтому следующим этапом был обзор уже существующих систем.



8. MCell
Система моделирования КА моделей.
Преищмуества: имеет удобный, интуитивно-понятный и приятный интерфейс. Расширяема, есть возможность добавлять собственные реализации моделей через DLL.
Недостатки: расширяемость ограничена, не поддерживает большие объёмы данных; поддержка только Win-платформы.



9. Fluent
Система моделирования потоков жидкостей и газов.
Обладает богатыми возможностями для моделирования и визуализации, расширяема пользовательскими модулями.
Однако не адекватна предметной области. Да и платная к тому же.



  10.
  Т.о. существующие системы в полном объёме не удовлетворяют _всем_ предъявленным требованиям, потому было решено разработать собственную систему визуализации.



11. Следующим этапом разработки было проектирование архитектуры в соответствие с предъявленными требованиями. Рассмотрим по порядку существующие в системе модули/компоненты:
* Модуль взаимодействия с вычислительной системой/вычислителем/моделью...
Был разработан интерфейс для обеспечения коммуникации с вычислителем и несколько различных реализаций данного интерфейса: для локального исполнения, напр., разделяемые бибилиотеки, для удалённого - сетевая реализация данного интерфейса.
Это всё удовлетворяет свойству интерпоперабельности.
* Поддержка различных режимов отображения
Предоствляется интерфейс для рисования.
* Поддержка ралзичных графических библиотек
Пишется небольшая обёртка для нужной бибилиотеки, после чего она легко включается в систему.
* Пользовательский интерфейс
Представляет из себя MDI интерфейс.



12. Пример.
Открыть модель.
Открыть конфиг.
Запустить на счёт.
Разные режимы отображения.



13. Результаты.
Что есть.
Что в процессе (работа с кластером, сохранение/загрузка)